---
// ThemeToggle.astro
---

<button
  id="theme-toggle"
  type="button"
  class="p-2 rounded-md focus:outline-none focus:ring-2 transition-colors duration-200"
  style="color: var(--ctp-subtext1); --tw-ring-color: var(--ctp-blue);"
  aria-label="Cambiar tema"
>
  <!-- Sun icon -->
  <svg class="w-5 h-5 sun-icon hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
  </svg>
  
  <!-- Moon icon -->
  <svg class="w-5 h-5 moon-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
  </svg>
</button>

<style>
  #theme-toggle:hover {
    color: var(--ctp-text);
    background-color: var(--ctp-surface0);
  }
</style>

<script>
  function initThemeToggle() {
    const themeToggle = document.getElementById('theme-toggle');
    const sunIcon = document.querySelector('.sun-icon');
    const moonIcon = document.querySelector('.moon-icon');
    
    if (!themeToggle || !sunIcon || !moonIcon) return;
    
    function updateIcons() {
      const isDark = document.documentElement.classList.contains('dark');
      sunIcon.classList.toggle('hidden', isDark);
      moonIcon.classList.toggle('hidden', !isDark);
    }
    
    // Initial update
    updateIcons();
    
    // Toggle theme on click
    themeToggle.addEventListener('click', () => {
      const isDark = document.documentElement.classList.contains('dark');
      document.documentElement.classList.toggle('dark', !isDark);
      localStorage.setItem('theme', isDark ? 'light' : 'dark');
      updateIcons();
    });
    
    // Listen for theme changes
    const observer = new MutationObserver(updateIcons);
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class']
    });
  }
  
  // Initialize on DOM content loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initThemeToggle);
  } else {
    initThemeToggle();
  }
</script>
